{"version":3,"sources":["summary.js","item.js","itemEdit.js","removeModal.js","category.js","income.js","budget.js","Assets/Images/budge-it mobile.png","App.js","index.js"],"names":["Summary","state","netTotal","collapsed","toggleCollapse","setState","prevState","prevProps","this","props","income","expenses","className","toFixed","onClick","parseFloat","React","Component","Item","itemLabel","itemValue","ItemEdit","remove","toggleRemove","confirmRemove","e","removeItem","id","cancelRemove","type","value","onChange","editItemLabel","step","editItemValue","RemoveModal","Category","edit","itemList","loaded","total","toggleEdit","updateItemLabel","target","updateItemValue","addItem","label","document","getElementById","focus","preventDefault","i","item","filter","_","removeCategory","json","JSON","stringify","localStorage","setItem","LOCAL_STORAGE_KEY","sum","newCategoryTotal","getItem","parse","length","categoryLabel","placeholder","newCategoryLabel","map","items","onSubmit","Income","newIncomeTotal","Budget","categoryList","updateCategoryLabel","addCategory","ITEM_KEY","uuid","category","c","categories","App","alt","src","mobile","Array","prototype","_len","ReactDOM","render","StrictMode"],"mappings":"2RAEaA,EAAb,4MACIC,MAAQ,CACJC,SAAU,EACVC,WAAW,GAHnB,EAaIC,eAAiB,WACb,EAAKC,UAAU,SAAAC,GAAS,MAAK,CACzBH,WAAYG,EAAUH,eAflC,iEAMuBI,GACXC,KAAKC,QAAUF,GACjBC,KAAKH,SAAS,CAAEH,SAAUM,KAAKC,MAAMC,OAASF,KAAKC,MAAME,aARnE,+BAmBc,IAAD,EACwBH,KAAKC,MAA1BE,EADH,EACGA,SAAUD,EADb,EACaA,OACVP,EAAcK,KAAKP,MAAnBE,UACR,OACI,0BAASS,UAAU,UAAnB,UACI,yCAGA,sBAAKA,UAAU,WAAf,UACI,oDACA,mCAAMJ,KAAKP,MAAMC,SAAW,GAAGW,QAAQ,SAI3C,sBAAKD,UAAWT,EAAY,qBAAuB,oBAAnD,UACI,sBAAKS,UAAU,yBAAyBE,QAASN,KAAKJ,eAAtD,UACI,oBAAIQ,UAAU,iBAAd,iBACA,qBAAKA,UAAWT,EAAY,2BAA6B,+BAG7D,sBAAKS,UAAU,OAAf,UACI,oBAAIA,UAAU,aAAd,oBACA,oBAAGA,UAAU,oBAAb,eAAoCG,WAAWL,GAAQG,QAAQ,SAGnE,sBAAKD,UAAU,OAAf,UACI,oBAAIA,UAAU,aAAd,sBACA,oBAAGA,UAAU,sBAAb,eAAsCG,WAAWJ,GAAUE,QAAQ,SAItEV,EACG,qBAAKS,UAAU,2BAAf,SACI,kCAAKJ,KAAKP,MAAMC,SAASW,QAAQ,QAGrC,sBAAKD,UAAU,iBAAf,UACI,wCACA,qBAAKA,UAAU,cAAf,SACI,kCAAKJ,KAAKP,MAAMC,SAASW,QAAQ,qBA1DjE,GAA6BG,IAAMC,WCAtBC,EAAb,uKACc,IAAD,EAC4BV,KAAKC,MAA9BU,EADH,EACGA,UAAWC,EADd,EACcA,UAEnB,OACI,sBAAKR,UAAU,OAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BO,IAC5B,oBAAGP,UAAU,aAAb,cAA4BG,WAAWK,GAAWP,QAAQ,aAP1E,GAA0BG,IAAMC,WCAnBI,EAAb,4MACIpB,MAAQ,CACJqB,QAAQ,GAFhB,EAMIC,aAAe,WACX,EAAKlB,UAAU,SAAAC,GAAS,MAAK,CACzBgB,QAAShB,EAAUgB,YAR/B,EAYIE,cAAgB,SAACC,GACb,EAAKhB,MAAMiB,WAAW,EAAKjB,MAAMkB,GAAIF,GACrC,EAAKpB,SAAS,CAAEiB,QAAQ,KAdhC,EAiBIM,aAAe,WACP,EAAK3B,MAAMqB,QACX,EAAKjB,SAAS,CAAEiB,QAAQ,KAnBpC,uDAuBc,IAAD,SACgCd,KAAKC,MAAlCU,EADH,EACGA,UAAWC,EADd,EACcA,UAAWO,EADzB,EACyBA,GAE9B,OAEI,cADA,CACA,OAAKf,UAAU,YAAYE,QAASN,KAAKoB,aAAzC,UACI,uBACIhB,UAAU,mBACViB,KAAK,OACLC,MAAOX,EACPY,SAAU,SAACN,GAAD,OAAO,EAAKhB,MAAMuB,cAAcP,EAAGE,MAGjD,sBAAKf,UAAU,cAAf,UACI,kCACA,uBACIA,UAAU,mBACViB,KAAK,SACLI,KAAK,MACLH,MAAOV,EACPW,SAAU,SAACN,GAAD,OAAO,EAAKhB,MAAMyB,cAAcT,EAAGE,MAGhDnB,KAAKP,MAAMqB,OACR,sBAAKV,UAAU,sBAAf,UACI,wBACIA,UAAU,kCACVE,QAAS,SAACW,GAAD,OAAO,EAAKD,cAAcC,MAEvC,qBAAKb,UAAU,qBAAf,8BAGJ,wBACIA,UAAU,sBACVE,QAASN,KAAKe,yBAzD1C,GAA8BP,IAAMC,WCA7B,SAASkB,EAAY1B,GAC1B,OACE,qBAAKG,UAAU,yBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,+CACA,iGAEA,sBAAKA,UAAU,cAAf,UACE,wBACEA,UAAU,cACVE,QAAS,SAACW,GAAD,OAAOhB,EAAMe,cAAcC,MAItC,wBACEb,UAAU,aACVE,QAAS,kBAAML,EAAMc,0BCb1B,IAAMa,EAAb,4MACInC,MAAQ,CACJoC,MAAM,EACNC,SAAU,GACVnB,UAAW,GACXC,UAAW,GACXmB,QAAQ,EACRpC,WAAW,EACXmB,QAAQ,EACRkB,MAAO,GATf,EAqDIC,WAAa,WACT,EAAKpC,UAAU,SAAAC,GAAS,MAAK,CACzB+B,MAAO/B,EAAU+B,UAvD7B,EA4DIjC,eAAiB,WACb,EAAKC,UAAU,SAAAC,GAAS,MAAK,CACzBH,WAAYG,EAAUH,eA9DlC,EAmEIuC,gBAAkB,SAAAjB,GAAC,OACf,EAAKpB,SAAS,CAAEc,UAAWM,EAAEkB,OAAOb,SApE5C,EAuEIc,gBAAkB,SAAAnB,GAAC,OACf,EAAKpB,SAAS,CAAEe,UAAWK,EAAEkB,OAAOb,SAxE5C,EA2EIe,QAAU,SAAApB,GACsB,KAAzB,EAAKxB,MAAMkB,WAA6C,KAAzB,EAAKlB,MAAMmB,YACzC,EAAKf,UAAS,SAAAC,GAAS,MAAK,CACxBgC,SAAS,GAAD,mBAAMhC,EAAUgC,UAAhB,CAA0B,CAACQ,MAAO,EAAK7C,MAAMkB,UAAWW,MAAO,EAAK7B,MAAMmB,aAClFD,UAAW,GACXC,UAAW,OAEf2B,SAASC,eAAe,cAAgB,EAAKvC,MAAMkB,IAAIsB,SAG3DxB,EAAEyB,kBArFV,EAyFIlB,cAAgB,SAACP,EAAG0B,GAChB,IAAIb,EAAQ,YAAO,EAAKrC,MAAMqC,UAC1Bc,EAAI,eAAOd,EAASa,IAExBC,EAAKN,MAAQrB,EAAEkB,OAAOb,MACtBQ,EAASa,GAAKC,EAEd,EAAK/C,SAAS,CAAEiC,cAhGxB,EAoGIJ,cAAgB,SAACT,EAAG0B,GAChB,IAAIb,EAAQ,YAAO,EAAKrC,MAAMqC,UAC1Bc,EAAI,eAAOd,EAASa,IACxBC,EAAKtB,MAAQL,EAAEkB,OAAOb,MACtBQ,EAASa,GAAKC,EACd,EAAK/C,SAAS,CAAEiC,cAzGxB,EA6GIZ,WAAa,SAACC,EAAIF,GACd,EAAKpB,UAAS,SAAAC,GAAS,MAAK,CACxBgC,SAAUhC,EAAUgC,SAASe,QAAO,SAACC,EAAGH,GAAJ,OAAUA,IAAMxB,SAExDF,EAAEyB,kBAjHV,EAqHI3B,aAAe,WACX,EAAKlB,UAAU,SAAAC,GAAS,MAAK,CACzBgB,QAAShB,EAAUgB,YAvH/B,EA4HIE,cAAgB,SAACC,GACb,EAAKhB,MAAM8C,eAAe,EAAK9C,MAAMkB,GAAIF,GACzC,EAAKpB,SAAS,CAAEiB,QAAQ,EAAOe,MAAM,KA9H7C,iEAYuB9B,EAAWD,GAE1B,GAAIA,EAAUgC,WAAa9B,KAAKP,MAAMqC,SAAU,CAE5C,IAAMkB,EAAOC,KAAKC,UAAUlD,KAAKP,MAAMqC,UACvCqB,aAAaC,QAAQpD,KAAKC,MAAMoD,kBAAmBL,GAGnDhD,KAAKH,SAAS,CAAEmC,MAAOhC,KAAKP,MAAMqC,SAASwB,IAAI,WAC/CtD,KAAKC,MAAMsD,iBAAiBvD,KAAKP,MAAMqC,SAASwB,IAAI,SAAUtD,KAAKC,MAAMkB,IAI7E,GAAIpB,EAAUsD,oBAAsBrD,KAAKC,MAAMoD,kBAAmB,CAE9D,IAAML,EAAOG,aAAaK,QAAQxD,KAAKC,MAAMoD,mBACvCvB,EAAWmB,KAAKQ,MAAMT,GACxBlB,GACA9B,KAAKH,UAAS,iBAAO,CAAEiC,eAI3B9B,KAAKP,MAAMqC,SAAS4B,OAAS,IAAM1D,KAAKP,MAAMsC,SAC9CQ,SAASC,eAAe,cAAgBxC,KAAKC,MAAMkB,IAAIsB,QACvDzC,KAAKH,SAAS,CAAEkC,QAAQ,OApCpC,0CA0CQ,IAAMiB,EAAOG,aAAaK,QAAQxD,KAAKC,MAAMoD,mBACvCvB,EAAWmB,KAAKQ,MAAMT,GACxBlB,GACA9B,KAAKH,UAAS,iBAAO,CAAEiC,gBAGV,OAAbA,GAAqBA,EAAS4B,OAAS,IACvC1D,KAAKH,SAAS,CAAEgC,MAAM,EAAMlC,WAAW,MAjDnD,+BAiIc,IAAD,SACyBK,KAAKC,MAA3B0D,EADH,EACGA,cAAexC,EADlB,EACkBA,GADlB,EAE+BnB,KAAKP,MAAjCoC,EAFH,EAEGA,KAAMlC,EAFT,EAESA,UAAWmB,EAFpB,EAEoBA,OAEzB,OACI,0BAASV,UAAWT,EAAY,qBAAuB,oBAAvD,UACKkC,EACG,qCAEI,uBACIzB,UAAU,iBACViB,KAAK,OACLuC,YAAY,iBACZtC,MAAOqC,EACPpC,SAAU,SAACN,GAAD,OAAO,EAAKhB,MAAM4D,iBAAiB5C,EAAGE,MAEpD,wBAAQf,UAAU,0BAA0BE,QAAS,kBAAM,EAAKS,gBAAhE,kBAGJ,sBAAKX,UAAU,yBAAyBE,QAASN,KAAKJ,eAAtD,UACI,oBAAIQ,UAAU,iBAAd,SAAgCuD,IAChC,qBAAKvD,UAAWT,EAAY,2BAA6B,+BAIhEA,EAAY,GAAK,wBAAQS,UAAWyB,EAAO,uBAAyB,WAAavB,QAASN,KAAKiC,aAG/FjC,KAAKP,MAAMqC,SAASgC,KACjB,SAACC,EAAOpB,GAAR,OACId,EACI,cAAC,EAAD,CAEIV,GAAIwB,EACJhC,UAAWoD,EAAMzB,MACjB1B,UAAWmD,EAAMzC,MACjBE,cAAe,EAAKA,cACpBE,cAAe,EAAKA,cACpBR,WAAY,EAAKA,YANZyB,GAST,cAAC,EAAD,CAEIxB,GAAIwB,EACJhC,UAAWoD,EAAMzB,MACjB1B,UAAWmD,EAAMzC,OAHZqB,MAQpBd,EACG,qBAAKzB,UAAU,YAAf,SACI,uBAAM4D,SAAUhE,KAAKqC,QAArB,UACI,uBACIjC,UAAU,mBACVe,GAAI,cAAcA,EAClByC,YAAY,WACZvC,KAAK,OACLC,MAAOtB,KAAKP,MAAMkB,UAClBY,SAAUvB,KAAKkC,kBAGnB,sBAAK9B,UAAU,cAAf,UACI,kCACA,uBACIA,UAAU,mBACVwD,YAAY,QACZvC,KAAK,SACLI,KAAK,MACLH,MAAOtB,KAAKP,MAAMmB,UAClBW,SAAUvB,KAAKoC,kBAEnB,wBAAQhC,UAAU,6BAK9B,GAIHT,EACG,qBAAKS,UAAU,2BAAf,SACI,kCAAKJ,KAAKP,MAAMuC,MAAM3B,QAAQ,QAGlC,sBAAKD,UAAU,iBAAf,UACI,wCACA,qBAAKA,UAAU,cAAf,SACI,kCAAKJ,KAAKP,MAAMuC,MAAM3B,QAAQ,WAMzCS,EACG,cAACa,EAAD,CACIX,cAAehB,KAAKgB,cACpBD,aAAcf,KAAKe,eAGvB,UAtOpB,GAA8BP,IAAMC,WCDvBwD,EAAb,4MACIxE,MAAQ,CACJoC,MAAM,EACNC,SAAU,GACVnB,UAAW,GACXC,UAAW,GACXmB,QAAQ,EACRpC,WAAW,EACXqC,OAAQ,GAAG3B,QAAQ,IAR3B,EA4CI4B,WAAa,WACT,EAAKpC,UAAU,SAAAC,GAAS,MAAK,CACzB+B,MAAO/B,EAAU+B,UA9C7B,EAmDIjC,eAAiB,WACb,EAAKC,UAAU,SAAAC,GAAS,MAAK,CACzBH,WAAYG,EAAUH,eArDlC,EA0DIuC,gBAAkB,SAAAjB,GAAC,OACf,EAAKpB,SAAS,CAAEc,UAAWM,EAAEkB,OAAOb,SA3D5C,EA8DIc,gBAAkB,SAAAnB,GAAC,OACf,EAAKpB,SAAS,CAAEe,UAAWK,EAAEkB,OAAOb,SA/D5C,EAkEIe,QAAU,SAAApB,GACsB,KAAzB,EAAKxB,MAAMkB,WAA6C,KAAzB,EAAKlB,MAAMmB,YACzC,EAAKf,UAAS,SAAAC,GAAS,MAAK,CACxBgC,SAAS,GAAD,mBAAMhC,EAAUgC,UAAhB,CAA0B,CAACQ,MAAO,EAAK7C,MAAMkB,UAAWW,MAAO,EAAK7B,MAAMmB,aAClFD,UAAW,GACXC,UAAW,OAEf2B,SAASC,eAAe,cAAgB,EAAKvC,MAAMkB,IAAIsB,SAG3DxB,EAAEyB,kBA5EV,EAgFIlB,cAAgB,SAACP,EAAG0B,GAChB,IAAIb,EAAQ,YAAO,EAAKrC,MAAMqC,UAC1Bc,EAAI,eAAOd,EAASa,IACxBC,EAAKN,MAAQrB,EAAEkB,OAAOb,MACtBQ,EAASa,GAAKC,EACd,EAAK/C,SAAS,CAAEiC,cArFxB,EAyFIJ,cAAgB,SAACT,EAAG0B,GAChB,IAAIb,EAAQ,YAAO,EAAKrC,MAAMqC,UAC1Bc,EAAI,eAAOd,EAASa,IACxBC,EAAKtB,MAAQL,EAAEkB,OAAOb,MACtBQ,EAASa,GAAKC,EACd,EAAK/C,SAAS,CAAEiC,cA9FxB,EAkGIZ,WAAa,SAACC,EAAIF,GACd,EAAKpB,UAAS,SAAAC,GAAS,MAAK,CACxBgC,SAAUhC,EAAUgC,SAASe,QAAO,SAACC,EAAGH,GAAJ,OAAUA,IAAMxB,SAExDF,EAAEyB,kBAtGV,iEAWuBI,EAAGhD,GAElB,GAAIA,EAAUgC,WAAa9B,KAAKP,MAAMqC,SAAU,CAE5C,IAAMkB,EAAOC,KAAKC,UAAUlD,KAAKP,MAAMqC,UACvCqB,aAAaC,QAAQ,aAAcJ,GAGnChD,KAAKH,SAAS,CAAEmC,MAAOhC,KAAKP,MAAMqC,SAASwB,IAAI,SAASjD,QAAQ,KAChEL,KAAKC,MAAMiE,eAAelE,KAAKP,MAAMqC,SAASwB,IAAI,SAASjD,QAAQ,IAInEL,KAAKP,MAAMqC,SAAS4B,OAAS,IAAM1D,KAAKP,MAAMsC,SAC9CQ,SAASC,eAAe,cAAgBxC,KAAKC,MAAMkB,IAAIsB,QACvDzC,KAAKH,SAAS,CAAEkC,QAAQ,OA1BpC,0CAgCQ,IAAMiB,EAAOG,aAAaK,QAAQ,cAC5B1B,EAAWmB,KAAKQ,MAAMT,GACxBlB,GACA9B,KAAKH,UAAS,iBAAO,CAAEiC,gBAGV,OAAbA,GAAqBA,EAAS4B,OAAS,IACvC1D,KAAKH,SAAS,CAAEgC,MAAM,EAAMlC,WAAW,MAvCnD,+BAyGc,IAAD,OACGwB,EAAOnB,KAAKC,MAAZkB,GADH,EAEuBnB,KAAKP,MAAzBoC,EAFH,EAEGA,KAAMlC,EAFT,EAESA,UAEd,OACI,0BAASS,UAAWT,EAAY,qBAAuB,oBAAvD,UACI,sBAAKS,UAAU,yBAAyBE,QAASN,KAAKJ,eAAtD,UACI,oBAAIQ,UAAU,iBAAd,oBACA,qBAAKA,UAAWT,EAAY,2BAA6B,+BAG5DA,EAAY,GAAK,wBAAQS,UAAWyB,EAAO,uBAAyB,WAAavB,QAASN,KAAKiC,aAG/FjC,KAAKP,MAAMqC,SAASgC,KACjB,SAACC,EAAOpB,GAAR,OACQd,EACI,cAAC,EAAD,CAEIV,GAAIwB,EACJhC,UAAWoD,EAAMzB,MACjB1B,UAAWmD,EAAMzC,MACjBE,cAAe,EAAKA,cACpBE,cAAe,EAAKA,cACpBR,WAAY,EAAKA,YANZyB,GAST,cAAC,EAAD,CAEIxB,GAAIwB,EACJhC,UAAWoD,EAAMzB,MACjB1B,UAAWmD,EAAMzC,OAHZqB,MAQxBd,EACG,qBAAKzB,UAAU,YAAf,SACI,uBAAM4D,SAAUhE,KAAKqC,QAArB,UACI,uBACIjC,UAAU,mBACVe,GAAI,cAAcA,EAClByC,YAAY,WACZvC,KAAK,OACLC,MAAOtB,KAAKP,MAAMkB,UAClBY,SAAUvB,KAAKkC,kBAGnB,sBAAK9B,UAAU,cAAf,UACI,kCACA,uBACIA,UAAU,mBACVwD,YAAY,QACZvC,KAAK,SACLI,KAAK,MACLH,MAAOtB,KAAKP,MAAMmB,UAClBW,SAAUvB,KAAKoC,kBAEnB,wBAAQhC,UAAU,6BAK9B,GAIHT,EACG,qBAAKS,UAAU,2BAAf,SACI,kCAAKJ,KAAKP,MAAMuC,WAGpB,sBAAK5B,UAAU,iBAAf,UACI,wCACA,qBAAKA,UAAU,cAAf,SACI,kCAAKJ,KAAKP,MAAMuC,qBApL5C,GAA4BxB,IAAMC,W,iBCErB0D,EAAb,4MACI1E,MAAQ,CACJ2E,aAAc,GACdT,cAAe,GACfxD,UAAW,GAAGE,QAAQ,GACtBH,QAAS,GAAGG,QAAQ,IAL5B,EA8BIgE,oBAAsB,SAAApD,GAAC,OACnB,EAAKpB,SAAS,CAAE8D,cAAe1C,EAAEkB,OAAOb,SA/BhD,EAkCIgD,YAAc,SAAArD,GACsB,KAA7B,EAAKxB,MAAMkE,eACV,EAAK9D,UAAS,SAAAC,GAAS,MAAK,CACxBsE,aAAa,GAAD,mBAAMtE,EAAUsE,cAAhB,CAA8B,CAAC9B,MAAO,EAAK7C,MAAMkE,cAClB3B,MAAO,EACPuC,SAAU,YAAcC,SACnEb,cAAe,OAIvB1C,EAAEyB,kBA5CV,EAgDImB,iBAAmB,SAAC5C,EAAG0B,GACnB,IAAIyB,EAAY,YAAO,EAAK3E,MAAM2E,cAC9BK,EAAQ,eAAOL,EAAazB,IAEhC8B,EAASnC,MAAQrB,EAAEkB,OAAOb,MAC1B8C,EAAazB,GAAK8B,EAElB,EAAK5E,SAAS,CAAEuE,kBAvDxB,EA2DIb,iBAAmB,SAACmB,EAAG/B,GACnB,IAAIyB,EAAY,YAAO,EAAK3E,MAAM2E,cAC9BK,EAAQ,eAAOL,EAAazB,IAEhC8B,EAASzC,MAAQ0C,EACjBN,EAAazB,GAAK8B,EAElB,EAAK5E,SAAS,CAAEuE,kBAlExB,EAsEIF,eAAiB,SAAAQ,GAAC,OACd,EAAK7E,SAAS,CAAEK,OAAQwE,KAvEhC,EA0EI3B,eAAiB,SAAC5B,EAAIF,GAClB,EAAKpB,UAAS,SAAAC,GAAS,MAAK,CACxBsE,aAActE,EAAUsE,aAAavB,QAAO,SAACC,EAAGH,GAAJ,OAAUA,IAAMxB,SAIhEgC,aAAajC,WAAW,EAAKzB,MAAM2E,aAAajD,GAAIoD,UAEpDtD,EAAEyB,kBAlFV,iEAQuBI,EAAGhD,GAElB,GAAGA,EAAUsE,eAAiBpE,KAAKP,MAAM2E,aAAc,CAEnD,IAAMpB,EAAOC,KAAKC,UAAUlD,KAAKP,MAAM2E,cACvCjB,aAAaC,QAAQ,eAAgBJ,GAGrChD,KAAKH,SAAS,CAAEM,SAAUH,KAAKP,MAAM2E,aAAad,IAAI,SAASjD,QAAQ,QAhBnF,0CAsBQ,IAAM2C,EAAOG,aAAaK,QAAQ,gBAC5BY,EAAenB,KAAKQ,MAAMT,GAC5BoB,GACApE,KAAKH,UAAS,iBAAO,CAAEuE,qBAzBnC,+BAqFc,IAAD,OACL,OACI,sBAAKhE,UAAU,UAAf,UACI,cAAC,EAAD,CACID,SAAUH,KAAKP,MAAMU,SACrBD,OAAQF,KAAKP,MAAMS,SAGvB,sBAAKE,UAAU,SAAf,UACI,wCAEA,cAAC,EAAD,CACI8D,eAAgBlE,KAAKkE,iBAIxBlE,KAAKP,MAAM2E,aAAaN,KACrB,SAACa,EAAYhC,GAAb,OACI,cAAC,EAAD,CAEIxB,GAAIwB,EACJgB,cAAegB,EAAWrC,MAC1Be,kBAAmBsB,EAAWJ,SAC9BV,iBAAkB,EAAKA,iBACvBN,iBAAkB,EAAKA,iBACvBR,eAAgB,EAAKA,gBANhBJ,MAWjB,uBAAMvC,UAAU,oBAAoB4D,SAAUhE,KAAKsE,YAAnD,UACI,uBACIlE,UAAU,iBACVwD,YAAY,eACZvC,KAAK,OACLC,MAAOtB,KAAKP,MAAMkE,cAClBpC,SAAUvB,KAAKqE,sBAEnB,wBAAQjE,UAAU,sCA3H1C,GAA4BI,IAAMC,WCNnB,MAA0B,4CC2B1BmE,MAvBf,WACE,OACE,qCACE,qBAAKxE,UAAU,SAAf,SACE,oBAAIA,UAAU,QAAd,yBAGF,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,MAIF,qBAAKA,UAAU,mBAAf,SACE,gCACE,2CACA,qEACA,qBAAKyE,IAAI,sBAAsBC,IAAKC,a,wBCZ9CC,MAAMC,UAAU3B,IAAM,SAAUoB,GAE9B,IADA,IAAI1C,EAAQ,EACFW,EAAI,EAAGuC,EAAOlF,KAAK0D,OAAQf,EAAIuC,EAAMvC,IAC7CX,GAASzB,WAAWP,KAAK2C,GAAG+B,IAG9B,OAAO1C,GAGTmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9C,SAASC,eAAe,W","file":"static/js/main.b0dd691f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport class Summary extends React.Component {\r\n    state = {\r\n        netTotal: 0,\r\n        collapsed: true\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n          this.setState({ netTotal: this.props.income - this.props.expenses })\r\n        }\r\n    }\r\n\r\n    // Toggle collapsed state\r\n    toggleCollapse = () => {\r\n        this.setState( prevState => ({\r\n            collapsed: !prevState.collapsed\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { expenses, income } = this.props\r\n        const { collapsed } = this.state\r\n        return (\r\n            <section className=\"summary\">\r\n                <h1>Summary</h1>\r\n\r\n                {/* Spending available */}\r\n                <div className=\"spending\">\r\n                    <h3>Spending available</h3>\r\n                    <p>${(this.state.netTotal / 2).toFixed(2)}</p>\r\n                </div>\r\n\r\n                {/* Income category */}\r\n                <div className={collapsed ? \"category collapsed\" : \"category expanded\"}>\r\n                    <div className=\"category-label-wrapper\" onClick={this.toggleCollapse}>\r\n                        <h2 className=\"category-label\">Net</h2>\r\n                        <div className={collapsed ? \"category-arrow collapsed\" : \"category-arrow expanded\"}></div>\r\n                    </div>\r\n\r\n                    <div className=\"item\">\r\n                        <h3 className=\"item-label\">Income</h3>\r\n                        <p className=\"item-value income\">+${parseFloat(income).toFixed(2)}</p>\r\n                    </div>\r\n\r\n                    <div className=\"item\">\r\n                        <h3 className=\"item-label\">Expenses</h3>\r\n                        <p className=\"item-value expenses\">-${parseFloat(expenses).toFixed(2)}</p>\r\n                    </div>\r\n\r\n                    {/* Net total */}\r\n                    {collapsed ?\r\n                        <div className=\"category-total collapsed\">\r\n                            <p>${this.state.netTotal.toFixed(2)}</p>\r\n                        </div>\r\n                    :\r\n                        <div className=\"category-total\">\r\n                            <h3>Total:</h3>\r\n                            <div className=\"float-right\">\r\n                                <p>${this.state.netTotal.toFixed(2)}</p>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport class Item extends React.Component {\r\n    render() {\r\n        const { itemLabel, itemValue } = this.props\r\n\r\n        return (\r\n            <div className=\"item\">\r\n                <h3 className=\"item-label\">{itemLabel}</h3>\r\n                <p className=\"item-value\">${parseFloat(itemValue).toFixed(2)}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport class ItemEdit extends React.Component {\r\n    state = {\r\n        remove: false\r\n    }\r\n\r\n    // Toggle edit state\r\n    toggleRemove = () => {\r\n        this.setState( prevState => ({\r\n            remove: !prevState.remove\r\n        }))\r\n    }\r\n\r\n    confirmRemove = (e) => {\r\n        this.props.removeItem(this.props.id, e)\r\n        this.setState({ remove: false })\r\n    }\r\n\r\n    cancelRemove = () => {\r\n        if (this.state.remove) {\r\n            this.setState({ remove: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { itemLabel, itemValue, id } = this.props\r\n\r\n        return (\r\n            // Item edit form\r\n            <div className=\"item-edit\" onClick={this.cancelRemove}>\r\n                <input\r\n                    className=\"item-label-field\" \r\n                    type=\"text\" \r\n                    value={itemLabel}\r\n                    onChange={(e) => this.props.editItemLabel(e, id)}>\r\n                </input>\r\n\r\n                <div className=\"float-right\">\r\n                    <p>$</p>\r\n                    <input\r\n                        className=\"item-value-field\" \r\n                        type=\"number\" \r\n                        step=\".01\"\r\n                        value={itemValue}\r\n                        onChange={(e) => this.props.editItemValue(e, id)}>\r\n                    </input>\r\n\r\n                    {this.state.remove ?\r\n                        <div className=\"item-remove-wrapper\">\r\n                            <button\r\n                                className=\"remove-btn confirm-btn item-btn\"\r\n                                onClick={(e) => this.confirmRemove(e)}>\r\n                            </button>  \r\n                            <div className=\"item-remove-prompt\">Are you sure?</div>\r\n                        </div> \r\n                    :\r\n                        <button \r\n                            className=\"remove-btn item-btn\"\r\n                            onClick={this.toggleRemove}>\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport function RemoveModal(props) {\r\n  return (\r\n    <div className=\"remove-modal-container\">\r\n      <div className=\"remove-modal\">\r\n        <h3>Are you sure?</h3>\r\n        <p>Removing a category will permanently remove all items within it.</p>\r\n\r\n        <div className=\"btn-wrapper\">\r\n          <button \r\n            className=\"confirm-btn\" \r\n            onClick={(e) => props.confirmRemove(e)}\r\n          >\r\n          </button>\r\n\r\n          <button \r\n            className=\"cancel-btn\" \r\n            onClick={() => props.toggleRemove()}\r\n          >\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Item } from './item'\r\nimport { ItemEdit } from './itemEdit'\r\nimport { RemoveModal } from './removeModal'\r\n\r\nexport class Category extends React.Component {\r\n    state = {\r\n        edit: false,\r\n        itemList: [],\r\n        itemLabel: \"\",\r\n        itemValue: \"\",\r\n        loaded: false,\r\n        collapsed: true,\r\n        remove: false,\r\n        total: 0,\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // Update itemList changes\r\n        if (prevState.itemList !== this.state.itemList) {\r\n            // Set localStorage\r\n            const json = JSON.stringify(this.state.itemList)\r\n            localStorage.setItem(this.props.LOCAL_STORAGE_KEY, json)\r\n\r\n            // Update item totals\r\n            this.setState({ total: this.state.itemList.sum(\"value\") })\r\n            this.props.newCategoryTotal(this.state.itemList.sum(\"value\"), this.props.id)\r\n        }\r\n\r\n        // Update on LOCAL_STORAGE_KEY change\r\n        if (prevProps.LOCAL_STORAGE_KEY !== this.props.LOCAL_STORAGE_KEY) {\r\n            // Get localStorage\r\n            const json = localStorage.getItem(this.props.LOCAL_STORAGE_KEY)\r\n            const itemList = JSON.parse(json)\r\n            if (itemList) \r\n                this.setState(() => ({ itemList }))\r\n        }\r\n\r\n        // Set focus on new empty items\r\n        if (this.state.itemList.length < 1 && !this.state.loaded) {\r\n            document.getElementById(\"item-field-\" + this.props.id).focus()\r\n            this.setState({ loaded: true })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Get localStorage\r\n        const json = localStorage.getItem(this.props.LOCAL_STORAGE_KEY)\r\n        const itemList = JSON.parse(json)\r\n        if (itemList) \r\n            this.setState(() => ({ itemList }))\r\n\r\n        // Render Item Add form if no items\r\n        if (itemList === null || itemList.length < 1)\r\n            this.setState({ edit: true, collapsed: false })\r\n    }\r\n\r\n    // Toggle edit state\r\n    toggleEdit = () => {\r\n        this.setState( prevState => ({\r\n            edit: !prevState.edit\r\n        }))\r\n    }\r\n\r\n    // Toggle collapsed state\r\n    toggleCollapse = () => {\r\n        this.setState( prevState => ({\r\n            collapsed: !prevState.collapsed\r\n        }))\r\n    }\r\n\r\n    // Update temporary itemLabel\r\n    updateItemLabel = e => \r\n        this.setState({ itemLabel: e.target.value })\r\n\r\n    // Update temporary itemValue\r\n    updateItemValue = e => \r\n        this.setState({ itemValue: e.target.value })\r\n\r\n    // Add new item\r\n    addItem = e => {\r\n        if(this.state.itemLabel !== \"\" && this.state.itemValue !== \"\") {\r\n            this.setState(prevState => ({\r\n                itemList: [...prevState.itemList, {label: this.state.itemLabel, value: this.state.itemValue}],\r\n                itemLabel: \"\",\r\n                itemValue: \"\"\r\n            }))\r\n            document.getElementById(\"item-field-\" + this.props.id).focus()\r\n        }\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    // Shadow copy, assign itemList.label new value, update itemList\r\n    editItemLabel = (e, i) => {\r\n        let itemList = [...this.state.itemList]\r\n        let item = {...itemList[i]}\r\n\r\n        item.label = e.target.value\r\n        itemList[i] = item\r\n\r\n        this.setState({ itemList })\r\n    }\r\n\r\n    // Shadow copy, assign itemList.value new value, update itemList\r\n    editItemValue = (e, i) => {\r\n        let itemList = [...this.state.itemList]\r\n        let item = {...itemList[i]}\r\n        item.value = e.target.value\r\n        itemList[i] = item\r\n        this.setState({ itemList })\r\n    }\r\n\r\n    // Remove itemList element\r\n    removeItem = (id, e) => {\r\n        this.setState(prevState => ({\r\n            itemList: prevState.itemList.filter((_, i) => i !== id)\r\n        }))\r\n        e.preventDefault()\r\n    }\r\n\r\n    // Toggle edit state\r\n    toggleRemove = () => {\r\n        this.setState( prevState => ({\r\n            remove: !prevState.remove\r\n        }))\r\n    }\r\n\r\n    // Confirm remove\r\n    confirmRemove = (e) => {\r\n        this.props.removeCategory(this.props.id, e)\r\n        this.setState({ remove: false, edit: false })\r\n    }\r\n\r\n    render() {\r\n        const { categoryLabel, id } = this.props\r\n        const { edit, collapsed, remove } = this.state\r\n\r\n        return (\r\n            <section className={collapsed ? \"category collapsed\" : \"category expanded\"}>\r\n                {edit ?\r\n                    <>\r\n                        {/* Category edit form */}\r\n                        <input \r\n                            className=\"category-field\" \r\n                            type=\"text\" \r\n                            placeholder=\"Category label\"\r\n                            value={categoryLabel}\r\n                            onChange={(e) => this.props.newCategoryLabel(e, id)}>\r\n                        </input>\r\n                        <button className=\"remove-btn category-btn\" onClick={() => this.toggleRemove()}> </button>\r\n                    </>\r\n                :\r\n                    <div className=\"category-label-wrapper\" onClick={this.toggleCollapse}>\r\n                        <h2 className=\"category-label\">{categoryLabel}</h2>\r\n                        <div className={collapsed ? \"category-arrow collapsed\" : \"category-arrow expanded\"}></div>\r\n                    </div>\r\n                }\r\n\r\n                {collapsed ? \"\" : <button className={edit ? \"edit-btn confirm-btn\" : \"edit-btn\" } onClick={this.toggleEdit}></button>}\r\n\r\n                {/* Render all items */}\r\n                {this.state.itemList.map (\r\n                    (items, i) =>\r\n                        edit ? \r\n                            <ItemEdit \r\n                                key={i}\r\n                                id={i}\r\n                                itemLabel={items.label}\r\n                                itemValue={items.value}\r\n                                editItemLabel={this.editItemLabel}\r\n                                editItemValue={this.editItemValue}\r\n                                removeItem={this.removeItem}\r\n                            />\r\n                        : \r\n                            <Item \r\n                                key={i}\r\n                                id={i}\r\n                                itemLabel={items.label}\r\n                                itemValue={items.value}\r\n                            />\r\n                )}\r\n\r\n                {/* Item Add form */}\r\n                {edit ? \r\n                    <div className=\"item-edit\">\r\n                        <form onSubmit={this.addItem}>\r\n                            <input \r\n                                className=\"item-label-field\" \r\n                                id={\"item-field-\"+id}\r\n                                placeholder=\"Add item\"\r\n                                type=\"text\"\r\n                                value={this.state.itemLabel}\r\n                                onChange={this.updateItemLabel}>\r\n                            </input>\r\n\r\n                            <div className=\"float-right\">\r\n                                <p>$</p>\r\n                                <input \r\n                                    className=\"item-value-field\" \r\n                                    placeholder=\"27.99\"\r\n                                    type=\"number\"\r\n                                    step=\".01\"\r\n                                    value={this.state.itemValue}\r\n                                    onChange={this.updateItemValue}>\r\n                                </input>\r\n                                <button className=\"add-btn item-btn\"></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                :\r\n                    \"\"\r\n                }\r\n\r\n                {/* Category total */}\r\n                {collapsed ?\r\n                    <div className=\"category-total collapsed\">\r\n                        <p>${this.state.total.toFixed(2)}</p>\r\n                    </div>\r\n                :\r\n                    <div className=\"category-total\">\r\n                        <h3>Total:</h3>\r\n                        <div className=\"float-right\">\r\n                            <p>${this.state.total.toFixed(2)}</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {/* Remove modal */}\r\n                {remove ? \r\n                    <RemoveModal\r\n                        confirmRemove={this.confirmRemove}\r\n                        toggleRemove={this.toggleRemove}\r\n                    />\r\n                :\r\n                    \"\"\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Item } from './item'\r\nimport { ItemEdit } from './itemEdit'\r\n\r\nexport class Income extends React.Component {\r\n    state = {\r\n        edit: false,\r\n        itemList: [],\r\n        itemLabel: \"\",\r\n        itemValue: \"\",\r\n        loaded: false,\r\n        collapsed: true,\r\n        total: (0).toFixed(2),\r\n    }\r\n\r\n    componentDidUpdate(_, prevState) {\r\n        // Update when itemList changes\r\n        if (prevState.itemList !== this.state.itemList) {\r\n            // Set localStorage\r\n            const json = JSON.stringify(this.state.itemList)\r\n            localStorage.setItem(\"incomeList\", json)\r\n\r\n            // Update income total\r\n            this.setState({ total: this.state.itemList.sum(\"value\").toFixed(2) })\r\n            this.props.newIncomeTotal(this.state.itemList.sum(\"value\").toFixed(2))\r\n        }\r\n\r\n        // Set focus on new empty items\r\n        if (this.state.itemList.length < 1 && !this.state.loaded) {\r\n            document.getElementById(\"item-field-\" + this.props.id).focus()\r\n            this.setState({ loaded: true })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Get localStorage\r\n        const json = localStorage.getItem(\"incomeList\")\r\n        const itemList = JSON.parse(json)\r\n        if (itemList)\r\n            this.setState(() => ({ itemList }))\r\n\r\n        // Render Item Add form if no items\r\n        if (itemList === null || itemList.length < 1) {\r\n            this.setState({ edit: true, collapsed: false })\r\n        }\r\n    }\r\n\r\n    // Toggle edit state\r\n    toggleEdit = () => {\r\n        this.setState( prevState => ({\r\n            edit: !prevState.edit\r\n        }))\r\n    }\r\n\r\n    // Toggle collapsed state\r\n    toggleCollapse = () => {\r\n        this.setState( prevState => ({\r\n            collapsed: !prevState.collapsed\r\n        }))\r\n    }\r\n\r\n    // Update temporary itemLabel\r\n    updateItemLabel = e => \r\n        this.setState({ itemLabel: e.target.value })\r\n\r\n    // Update temporary itemValue\r\n    updateItemValue = e => \r\n        this.setState({ itemValue: e.target.value })\r\n\r\n    // Add new item\r\n    addItem = e => {\r\n        if(this.state.itemLabel !== \"\" && this.state.itemValue !== \"\") {\r\n            this.setState(prevState => ({\r\n                itemList: [...prevState.itemList, {label: this.state.itemLabel, value: this.state.itemValue}],\r\n                itemLabel: \"\",\r\n                itemValue: \"\"\r\n            }))\r\n            document.getElementById(\"item-field-\" + this.props.id).focus()\r\n        }\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    // Shadow copy, assign itemList.label new value, update itemList\r\n    editItemLabel = (e, i) => {\r\n        let itemList = [...this.state.itemList]\r\n        let item = {...itemList[i]}\r\n        item.label = e.target.value\r\n        itemList[i] = item\r\n        this.setState({ itemList })\r\n    }\r\n\r\n    // Shadow copy, assign itemList.value new value, update itemList\r\n    editItemValue = (e, i) => {\r\n        let itemList = [...this.state.itemList]\r\n        let item = {...itemList[i]}\r\n        item.value = e.target.value\r\n        itemList[i] = item\r\n        this.setState({ itemList })\r\n    }\r\n\r\n    // Remove itemList element\r\n    removeItem = (id, e) => {\r\n        this.setState(prevState => ({\r\n            itemList: prevState.itemList.filter((_, i) => i !== id)\r\n        }))\r\n        e.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        const { id } = this.props\r\n        const { edit, collapsed } = this.state\r\n\r\n        return (\r\n            <section className={collapsed ? \"category collapsed\" : \"category expanded\"}>\r\n                <div className=\"category-label-wrapper\" onClick={this.toggleCollapse}>\r\n                    <h2 className=\"category-label\">Income</h2>\r\n                    <div className={collapsed ? \"category-arrow collapsed\" : \"category-arrow expanded\"}></div>\r\n                </div>\r\n\r\n                {collapsed ? \"\" : <button className={edit ? \"edit-btn confirm-btn\" : \"edit-btn\" } onClick={this.toggleEdit}></button>}\r\n\r\n                {/* Render all items */}\r\n                {this.state.itemList.map (\r\n                    (items, i) =>\r\n                            edit ? \r\n                                <ItemEdit \r\n                                    key={i}\r\n                                    id={i}\r\n                                    itemLabel={items.label}\r\n                                    itemValue={items.value}\r\n                                    editItemLabel={this.editItemLabel}\r\n                                    editItemValue={this.editItemValue}\r\n                                    removeItem={this.removeItem}\r\n                                />\r\n                            : \r\n                                <Item \r\n                                    key={i}\r\n                                    id={i}\r\n                                    itemLabel={items.label}\r\n                                    itemValue={items.value}\r\n                                />\r\n                )}\r\n\r\n                {/* Item Add form */}\r\n                {edit ? \r\n                    <div className=\"item-edit\">\r\n                        <form onSubmit={this.addItem}>\r\n                            <input \r\n                                className=\"item-label-field\" \r\n                                id={\"item-field-\"+id}\r\n                                placeholder=\"Add item\"\r\n                                type=\"text\"\r\n                                value={this.state.itemLabel}\r\n                                onChange={this.updateItemLabel}>\r\n                            </input>\r\n\r\n                            <div className=\"float-right\">\r\n                                <p>$</p>\r\n                                <input \r\n                                    className=\"item-value-field\" \r\n                                    placeholder=\"27.99\"\r\n                                    type=\"number\"\r\n                                    step=\".01\"\r\n                                    value={this.state.itemValue}\r\n                                    onChange={this.updateItemValue}>\r\n                                </input>\r\n                                <button className=\"add-btn item-btn\"></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                :\r\n                    \"\"\r\n                }\r\n\r\n                {/* Category total */}\r\n                {collapsed ?\r\n                    <div className=\"category-total collapsed\">\r\n                        <p>${this.state.total}</p>\r\n                    </div>\r\n                :\r\n                    <div className=\"category-total\">\r\n                        <h3>Total:</h3>\r\n                        <div className=\"float-right\">\r\n                            <p>${this.state.total}</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Summary } from './summary'\r\nimport { Category } from './category'\r\nimport { Income } from './income'\r\nimport uuid from 'react-uuid'\r\n\r\nexport class Budget extends React.Component {\r\n    state = {\r\n        categoryList: [],\r\n        categoryLabel: \"\",\r\n        expenses: (0).toFixed(2),\r\n        income: (0).toFixed(2),\r\n    }\r\n\r\n    componentDidUpdate(_, prevState) {\r\n        // Update when categoryList changes\r\n        if(prevState.categoryList !== this.state.categoryList) {\r\n            // Set localStorage\r\n            const json = JSON.stringify(this.state.categoryList)\r\n            localStorage.setItem(\"categoryList\", json)\r\n\r\n            // Update total expenses\r\n            this.setState({ expenses: this.state.categoryList.sum(\"total\").toFixed(2) })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Get localStorage and load categories\r\n        const json = localStorage.getItem(\"categoryList\")\r\n        const categoryList = JSON.parse(json)\r\n        if (categoryList) {\r\n            this.setState(() => ({ categoryList }))\r\n        }\r\n    }\r\n\r\n    // Update temporary categoryLabel\r\n    updateCategoryLabel = e => \r\n        this.setState({ categoryLabel: e.target.value })\r\n    \r\n    // Add new category\r\n    addCategory = e => {\r\n        if(this.state.categoryLabel !== \"\") {\r\n            this.setState(prevState => ({\r\n                categoryList: [...prevState.categoryList, {label: this.state.categoryLabel,\r\n                                                           total: 0,  \r\n                                                           ITEM_KEY: \"itemList_\" + uuid()}],\r\n                categoryLabel: \"\"\r\n            }))\r\n        }\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    // Shadow copy, assign categoryList.label new value, update categoryList\r\n    newCategoryLabel = (e, i) => {\r\n        let categoryList = [...this.state.categoryList]\r\n        let category = {...categoryList[i]}\r\n\r\n        category.label = e.target.value\r\n        categoryList[i] = category\r\n\r\n        this.setState({ categoryList })\r\n    }\r\n\r\n    // New category total from sum of item values\r\n    newCategoryTotal = (c, i) => {\r\n        let categoryList = [...this.state.categoryList]\r\n        let category = {...categoryList[i]}\r\n    \r\n        category.total = c\r\n        categoryList[i] = category\r\n    \r\n        this.setState({ categoryList })\r\n    }\r\n\r\n    // New income total\r\n    newIncomeTotal = c =>\r\n        this.setState({ income: c })\r\n\r\n    // Remove categoryList element\r\n    removeCategory = (id, e) => {\r\n        this.setState(prevState => ({\r\n            categoryList: prevState.categoryList.filter((_, i) => i !== id)\r\n        }))\r\n\r\n        // Remove items from category upon deletion\r\n        localStorage.removeItem(this.state.categoryList[id].ITEM_KEY)\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <Summary \r\n                    expenses={this.state.expenses} \r\n                    income={this.state.income}\r\n                />\r\n\r\n                <div className=\"budget\">\r\n                    <h1>Budget</h1>\r\n\r\n                    <Income \r\n                        newIncomeTotal={this.newIncomeTotal}\r\n                    />\r\n\r\n                    {/* Render all categories */}\r\n                    {this.state.categoryList.map (\r\n                        (categories, i) => \r\n                            <Category \r\n                                key={i}\r\n                                id={i}\r\n                                categoryLabel={categories.label}\r\n                                LOCAL_STORAGE_KEY={categories.ITEM_KEY}\r\n                                newCategoryLabel={this.newCategoryLabel}\r\n                                newCategoryTotal={this.newCategoryTotal}\r\n                                removeCategory={this.removeCategory}\r\n                            />\r\n                    )}\r\n\r\n                    {/* Category Add form */}\r\n                    <form className=\"category-add-form\" onSubmit={this.addCategory}>\r\n                        <input \r\n                            className=\"category-field\" \r\n                            placeholder=\"Add category\"\r\n                            type=\"text\"\r\n                            value={this.state.categoryLabel}\r\n                            onChange={this.updateCategoryLabel}>\r\n                        </input>\r\n                        <button className=\"add-btn category-btn\"></button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/budge-it mobile.03368f23.png\";","import React from 'react'\nimport { Budget } from './budget'\nimport mobile from './Assets/Images/budge-it mobile.png'\n\nfunction App() {\n  return (\n    <>\n      <div className=\"header\">\n        <h1 className=\"title\">Budge-it!</h1>\n      </div>\n\n      <div className=\"container\">\n        <Budget />\n      </div>\n\n      {/* Mobile view only warning message */}\n      <div className=\"mobile-view-only\">\n        <div>\n          <h1>Budge-it!</h1>\n          <p>(Currently only available on mobile)</p>\n          <img alt=\"mobile splashscreen\" src={mobile}></img>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './Assets/Stylesheets/index.css'\nimport './Assets/Stylesheets/summary.css'\nimport './Assets/Stylesheets/category.css'\nimport './Assets/Stylesheets/item.css'\n\nArray.prototype.sum = function (c) {\n  var total = 0\n  for ( var i = 0, _len = this.length; i < _len; i++ ) {\n    total += parseFloat(this[i][c])\n  }\n\n  return total\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}